using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using static System.Windows.Forms.AxHost;

namespace PayRoll
{
    public partial class Bonus : Form // Constructor for the Bonus class
    {
        public Bonus()
        {
            // Initialize components of the form (assumed to be generated by the Windows Form Designer)
            InitializeComponent();
            ShowBonus(); // Call the ShowBonus method
        }
        // SqlConnection object to represent a connection to a SQL Server database
        SqlConnection Con = new SqlConnection(@"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=C:\Users\deeks\OneDrive\Documents\EmpPay.mdf;Integrated Security=True;Connect Timeout=30 ");

        private void Clear()
        {
            BNameTb.Text = "";// Clear the text in a TextBox named BNameTb
            BAmountTb.Text = "";// Clear the text in a TextBox named BAmountTb

            Key = 0;// Reset the value of a variable named Key to 0


        }
        private void ShowBonus()
        {
            Con.Open();// Open a connection to the SQL Server database
            string Query = "Select * from BonusTbl";// SQL query to select all records from the "BonusTbl" table
            // Create a SqlDataAdapter with the SQL query and the open SqlConnection
            SqlDataAdapter sda = new SqlDataAdapter(Query, Con);
            // Automatically generate SQL commands to update the database (used by the DataAdapter)
            SqlCommandBuilder Builder = new SqlCommandBuilder(sda);
            var ds = new DataSet(); // Create a new DataSet to store the retrieved data
            sda.Fill(ds);// Fill the DataSet with data using the SqlDataAdapte
            // Set the DataSource of the DataGridView (BonusDGV) to the DataTable within the DataSe
            BonusDGV.DataSource = ds.Tables[0];
            Con.Close();// Close the SqlConnection

        }
        private void Bonus_Load(object sender, EventArgs e)
        {

        }

        private void SaveBtn_Click(object sender, EventArgs e)
        {
            // Check if either of the TextBoxes is empty
            if (BNameTb.Text == " " || BAmountTb.Text == " ")
            {
                MessageBox.Show("Missing Information");
            }
            else
            {
                try
                {
                    Con.Open();// Open the SqlConnection
                    // Create a SqlCommand to insert data into the "BonusTbl" table
                    SqlCommand cmd = new SqlCommand("insert into BonusTbl(BName,BAmt)values (@BN,@BA)", Con);
                    // Add parameters to the SqlCommand
                    cmd.Parameters.AddWithValue("@BN", BNameTb.Text);
                    cmd.Parameters.AddWithValue("@BA", BAmountTb.Text);
                    cmd.ExecuteNonQuery();// Execute the SqlCommand to insert data
                    MessageBox.Show("Bonus Detail Saved");// Display a success message
                    Con.Close();// Close the SqlConnection
                    ShowBonus();// Refresh the display of bonus details in the DataGridView
                    Clear();// Clear the TextBoxes and reset the Key variable

                }
                catch (Exception Ex)
                { 
                    // Display an error message if an exception occurs
                    MessageBox.Show(Ex.Message);
                }
            }
        }
        int Key = 0;// Declaration of a variable named Key with an initial value of 0
        private void BonusDGV_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        private void EditBtn_Click(object sender, EventArgs e)
        {
            // Check if either of the TextBoxes is empty
            if (BNameTb.Text == " " || BAmountTb.Text == " ")
            {
                MessageBox.Show("Missing Information");
            }
            else
            {
                try
                {
                    Con.Open();// Open the SqlConnection
                    // Create a SqlCommand to update data in the "BonusTbl" table
                    SqlCommand cmd = new SqlCommand("update BonusTbl Set BName=@BN,BAmt=@BA where BId=@BKey", Con);
                    // Add parameters to the SqlCommand
                    cmd.Parameters.AddWithValue("@BN", BNameTb.Text);
                    cmd.Parameters.AddWithValue("@BA", BAmountTb.Text);
                    cmd.Parameters.AddWithValue("@BKey", Key);
                    cmd.ExecuteNonQuery();// Execute the SqlCommand to update data
                    MessageBox.Show("Bonus Detail Updated");// Display a success message
                    Con.Close(); // Close the SqlConnection
                    ShowBonus();// Refresh the display of bonus details in the DataGridView
                    Clear();// Clear the TextBoxes and reset the Key variable

                }
                catch (Exception Ex)
                {
                    MessageBox.Show(Ex.Message);    
                }
            }
        }

        private void DeleteBtn_Click(object sender, EventArgs e)
        {
            // Check if the Key variable is 0 (indicating missing information)
            if (Key == 0)
            {
                MessageBox.Show("Missing Information");
            }
            else
            {
                try
                {
                    Con.Open();// Open the SqlConnection
                    // Create a SqlCommand to delete data from the "BonusTbl" table
                    SqlCommand cmd = new SqlCommand("Delete from BonusTbl Where BId =@EmpKey", Con);
                    cmd.Parameters.AddWithValue("@EmpKey", Key);// Add a parameter to the SqlCommand
                    cmd.ExecuteNonQuery();// Execute the SqlCommand to delete data
                    MessageBox.Show("Bonus Details Deleted");// Display a success message
                    Con.Close();// Close the SqlConnection
                    ShowBonus();// Refresh the display of bonus details in the DataGridView

                }
                catch (Exception Ex)
                {
                    // Display an error message if an exception occurs
                    MessageBox.Show(Ex.Message);
                }
            }
        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {
            this.Hide();// Hide the current form (this form)
        }

        private void pictureBox5_Click(object sender, EventArgs e)
        {

        }

        private void label2_Click(object sender, EventArgs e)
        {
            Home Obj = new Home();// Create a new instance of the Home class
            Obj.Show();// Show the new form (Home)
            this.Hide();// Hide the current form
        }

        private void label3_Click(object sender, EventArgs e)
        {
            Employee Obj = new Employee();// Create a new instance of the Employee class
            Obj.Show();// Show the new form 
            this.Hide();// Hide the current form
        }

        private void label7_Click(object sender, EventArgs e)
        {
            Attendences Obj = new Attendences();// Create a new instance of the Attendance class
            Obj.Show();// Show the new form 
            this.Hide();// Hide the current form
        }

        private void label5_Click(object sender, EventArgs e)
        {
            Salary Obj = new Salary();// Create a new instance of the Salary class
            Obj.Show();// Show the new form 
            this.Hide();// Hide the current form
        }

        private void panel2_Paint(object sender, PaintEventArgs e)
        {

        }

        private void panel1_Paint(object sender, PaintEventArgs e)
        {
        }

        private void label1_Click(object sender, EventArgs e)
        {
        }

        private void BAmountTb_TextChanged(object sender, EventArgs e)
        {
        }

        private void label6_Click(object sender, EventArgs e)
        {
        }

        private void BNameTb_TextChanged(object sender, EventArgs e)
        {
        }

        private void BonusDGV_CellContentClick_1(object sender, DataGridViewCellEventArgs e)
        {
            // Populate BNameTb with the value from the second column of the selected row
            BNameTb.Text = BonusDGV.SelectedRows[0].Cells[1].Value.ToString();
            // Populate BAmountTb with the value from the third column of the selected row
            BAmountTb.Text = BonusDGV.SelectedRows[0].Cells[2].Value.ToString();
            if (BNameTb.Text == "")// Check if BNameTb is empty
            { 
                // Set Key to 0 if BNameTb is empty
                Key = 0;
            }
            else
            {
                // Set Key to the value in the first column of the selected row
                Key = Convert.ToInt32(BonusDGV.SelectedRows[0].Cells[0].Value.ToString());
            }
        }

        private void pictureBox2_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        private void label6_Click_1(object sender, EventArgs e)
        {

        }
    }
}
